<?php

namespace AppBundle\Repository;

use Doctrine\ORM\Tools\Pagination\Paginator;

/**
 * TaxrefRepository
 *
 * This class was generated by the Doctrine ORM. Add your own custom
 * repository methods below.
 */
class TaxrefRepository extends \Doctrine\ORM\EntityRepository
{
    public function getFamilyList()
    {
        return $this->createQueryBuilder('t')
            ->orderBy('t.family', 'ASC')
            ->groupBy('t.family')
            ;
    }

    public function getSpeciesWithLbNameLike($val)
    {
        return $this->createQueryBuilder('t')
            ->where('t.lbName LIKE :val')
            ->setParameter('val', '%'.$val.'%')
            ->getQuery()
            ->getResult();
    }

    public function getSpeciesWithVernNameLike($val)
    {
        return $this->createQueryBuilder('t')
            ->where('t.vernacularName LIKE :val')
            ->setParameter('val', '%'.$val.'%')
            ->getQuery()
            ->getResult();
    }

    public function getSpeciesByFamily($family, $page, $nbPerPage)
    {
        $query = $this->createQueryBuilder('t')
            ->where('t.family = :family')
            ->setParameter('family', $family)
            ->orderBy('t.lbName', 'ASC')
            ->getQuery()
        ;

        $query
            // On définit l'annonce à partir de laquelle commencer la liste
            ->setFirstResult(($page-1)*$nbPerPage)
            // Ainsi que le nombre d'annonce à afficher sur une page
            ->setMaxResults($nbPerPage)
        ;

        // On retourne l'objet Paginator correspondant à la requête construite
        return new Paginator($query, true);
    }

    public function getNbSpecies()
    {
        $query = $this->createQueryBuilder('t')
            ->select('COUNT(t.cdNom)')
            ->getQuery()
            ->getSingleScalarResult();
        return $query;
    }
}
